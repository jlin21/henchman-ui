#!/usr/bin/env python

# do standard http requests
# be able to show status codes for now
# Currently only supported for RESTful HTTP requests
# Allow for redirects
# 
# params:
#   user (optional)
#   pswd (optional)
#   http (required)
#   url (required)
#   headers "key:value,key:value"
#   data "key:value,key:value"

import sys
import json
import os
import ast


sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/requests")
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/xmltodict")
import requests
import xmltodict

params = json.loads(sys.stdin.read())
#params = {}
result = {}

def convert_key_val(vals):
  tmp = {}
  if vals != "":
    for pair in vals.split(","):
      key_val = pair.split(":")
      if len(key_val) != 2:
        raise Exception("Invalid key value format")
      tmp[key_val[0]] = key_val[1]
   
  return tmp

try:
  url = params.get("url", "")
  #url = "http://ci.apigeng.com/v1/data/1k.json"
  http = params.get("http", "GET").upper()
  headers = convert_key_val(params.get("headers", ""))
  data = convert_key_val(params.get("data", ""))
  
  if not url:
    raise Exception("Url parameter is required")

  if http == "POST":
    r = requests.post(url, data=data, headers=headers)
  elif http == "PUT":
    r = requests.put(url, data=data, headers=headers)
  elif http == "DELETE":
    r = requests.delete(url, data=data, headers=headers)
  elif http == "OPTIONS":
    r = requests.options(url, data=data, headers=headers)
  else:
    r = requests.get(url, data=data, headers=headers)
  
  result["status"] = "ok"
  result["msg"] = "Http request successfully processed."

  c_type = dict(r.headers)['Content-Type']
  if "xml" in c_type:
    payload = xmltodict.parse(r.text)
  elif "json" in c_type:
    payload = ast.literal_eval(r.text)
  else:
    result["msg"] += "Content-Type %s is not supported.  Payload stored as a string." % c_type
    payload = str(r.text)

  result["output"] = {'status': r.status_code, 'headers': dict(r.headers), 'body': payload}
except Exception as e:
  result["status"] = "error"
  result["msg"] = "Http request unsuccessful."
  result["output"] = str(e)
print json.dumps(result)
