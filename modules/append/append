#!/usr/bin/env python
# append modules
# Appends a line to a given file
# Params,
# file: The file
# line: The line which has to be appended to the file
# unique: true/false. If set to true, doesn't append the line if it's
#         already present. Returns a skipped state if that's the case
#         Is great for property files.
#         default: true
import sys
import json
import os
import subprocess

params = json.loads(sys.stdin.read())

def append_line(params):
    result = {}
    try:
        f = params.get("file","")
        l = params.get("line", "").strip()
        unique = params.get("unique", "false")
        if not f:
            raise "Missing file"
            if not l:
                raise "Missing line"
        if unique in ["true", "t"]:
            with open(f) as source:
                for line in source.xreadlines():
                    if line.strip() == l:
                        result["status"] = "skipped"
                        result["msg"] = "Line already present"
                        return result
        with open(f, "a") as source:
            source.write(l + "\n")
        result["status"] = "ok"
        result["msg"] = "Appended line"
    except Exception as e:
        result["status"] = "error"
        result["msg"] = str(e)
    return result

print json.dumps(append_line(params))
             
